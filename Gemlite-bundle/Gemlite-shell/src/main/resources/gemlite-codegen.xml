<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration xmlns="http://www.gemlite.org/xsd/gemlite-codegen-1.0.0.xsd">
  <!-- Configure the database connection here -->
  <jdbc>
    <driver>org.h2.Driver</driver>
    <url>jdbc:h2:tcp://localhost/~/test</url>
    <user>sa</user>
    <password></password>
  </jdbc>
  <generator>
    <database>
      <!-- The database type. The format here is:
           gemlite.shell.codegen.util.[database].[database]Database -->
      <name>gemlite.shell.codegen.util.h2.H2Database</name>

      <!-- The database schema (or in the absence of schema support, in your RDBMS this
           can be the owner, user, database name) to be generated -->
      <inputSchema>TRAINING</inputSchema>

      <!-- All elements that are generated from your schema
           (A Java regular expression. Use the pipe to separate several expressions)
           Watch out for case-sensitivity. Depending on your database, this might be important! -->
      <includes>CUSTOMER|DETAIL|ORDERMAIN|PRODUCT</includes>

      <!-- All elements that are excluded from your schema
           (A Java regular expression. Use the pipe to separate several expressions).
           Excludes match before includes -->
      <excludes></excludes>
    </database>

    <target>
      <!-- The destination package of your generated classes (within the destination directory) -->
      <packageName>gemlite.sample.order.domain</packageName>
      <!-- The destination directory of your generated classes -->
      <directory>D:/sts_workspace/training-tp/order/Domain/src/main/java</directory>
    </target>
  </generator>
</configuration>